name: SHENYU-ACTION
on: 
  push:
    branches:
      - 'v*.*'

jobs:
  scan:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3         
    
    
    - name: Check commit              
      env:
        COMMITS_URL: ${{ github.event.head_commit.message }}
      run: |
        if echo "${COMMITS_URL}" | grep -q "#NORUN" ;then
        echo "Commit message contains #NORUN."
        exit 1
        fi

    - name: Run Trivy
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'table'
        output: 'trivy-results.txt'
        severity: 'CRITICAL'
      
    - name: Severity
      id: get-severity
      run: echo "::set-output name=severity::CRITICAL,HIGH"

    - name: Send Notification-Fail
      if: ${{steps.get-severity.outputs.severity == 'CRITICAL,HIGH'||steps.get-severity.outputs.severity =='HIGH'}}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_USERNAME: CICD
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_COLOR: '#FF0000'
        SLACK_TITLE: Scan failed
        SLACK_MESSAGE: Failed trivy scan,see uploaded report
        
    - name: Upload report
      if: ${{steps.get-severity.outputs.severity == 'CRITICAL,HIGH'||steps.get-severity.outputs.severity =='HIGH'}}
      uses: MeilCli/slack-upload-file@v3
      with:
        slack_token: ${{ secrets.SLACK_TOKEN }}
        channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
        file_path: 'trivy-results.txt'
        initial_comment: 'post by slack-upload-file'
      
    - name: exit  
      if: ${{steps.get-severity.outputs.severity == 'CRITICAL,HIGH'||steps.get-severity.outputs.severity =='HIGH'}}
      run: exit 1

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.1.1
      with:
        cosign-release: 'v2.2.0'

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - id: docker_meta
      uses: docker/metadata-action@v4.4.0
      with:
        images: lukelukeyuy/shenyu-cicd
        tags: type=sha,format=long
  
    - name: Build and push
      uses: docker/build-push-action@v4.0.0
      id: build-and-push
      with:
        push: true
        tags: ${{steps.docker_meta.outputs.tags }}

    - name: Sign image with a key
      run: cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
      env:
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}
        TAGS: ${{ steps.docker_meta.outputs.tags }}
        DIGEST: ${{ steps.build-and-push.outputs.digest }}    
    
    - name: Send Notification-Right
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_USERNAME: CICD
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_TITLE: Image build and signed
        SLACK_MESSAGE: |
          Name:SHEN YU
          Metricculation:E1221824
          Email:<https://outlook.office365.com/mail/ | E1221824@u.nus.edu>
          Git:<https://github.com/lukewwwwww/CICD-ShenYu | Github repository of CICD>
          Image:<https://hub.docker.com/repository/docker/lukelukeyuy/shenyu-cicd/general | https://hub.docker.com/repository/docker/lukelukeyuy/shenyu-cicd/general>
